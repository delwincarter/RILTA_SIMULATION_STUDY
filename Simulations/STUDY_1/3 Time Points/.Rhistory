#| warning: false
#| fig.width: 6
#| fig.height: 4
# Load libraries
library(ggplot2)
library(emmeans)
library(multcomp)
library(dplyr)
library(car)
library(effectsize)
library(here)
library(cowplot)
# Load and preprocess data
final_mc_values <- read.csv(
here::here("Simulations", "STUDY_2", "zbootstrapping", "r_l_3c_mc_final_mc_values.csv"),
stringsAsFactors = FALSE
) %>%
filter(!is.na(Parameter_Bias), !is.na(N), !is.na(Mixing_proportion), !is.na(Population), !is.na(Model), !is.na(Lambda)) %>%
mutate(
Population = case_when(
Population == "0.2" | Population == 0.2 ~ ".200",
Population == "0.8" | Population == 0.8 ~ ".800",
TRUE ~ as.character(Population)
),
Model = trimws(Model),
Population = trimws(Population),
Mixing_proportion = trimws(Mixing_proportion),
Mix = case_when(
Mixing_proportion == ".10, .30, .60" ~ 1,
Mixing_proportion == ".33, .33, .33" ~ 2,
Mixing_proportion == ".60, .30, .10" ~ 3,
TRUE ~ NA_real_
)
) %>%
mutate(
Model = factor(Model, levels = c("Model 1", "Model 2", "Model 3")),
N = factor(N, levels = c("N = 500", "N = 1000", "N = 2500", "N = 5000")),
Mixing_proportion = factor(Mixing_proportion, levels = c(".10, .30, .60", ".33, .33, .33", ".60, .30, .10")),
Lambda = factor(Lambda, levels = c("0.3", "0.5", "0.7", "0.9", "A", "B", "C", "D")),
Population = factor(Population, levels = c(".200", ".800"), labels = c(".200", ".800"))
) %>%
rename(T11 = Population)
# === PART 1: One 5-WAY ANOVA (MAIN EFFECTS ONLY, TYPE II) ===
m_main <- aov(
Parameter_Bias ~ N + Mixing_proportion + T11 + Model + Lambda,
data = final_mc_values
)
cat("5-Way ANOVA: Main Effects (Type II)\n")
print(Anova(m_main, type = "II"))
print(eta_squared(m_main, partial = TRUE))
# === PART 2: Five 5-WAY ANOVAs (ONLY FOUR-WAY INTERACTIONS, TYPE II) ===
m_4way_1 <- aov(
Parameter_Bias ~ N + Mixing_proportion + T11 + Model + Lambda + N:Mixing_proportion:T11:Model,
data = final_mc_values
)
cat("\n5-Way ANOVA: N × Mixing_proportion × T11 × Model (Type II)\n")
print(Anova(m_4way_1, type = "II"))
print(eta_squared(m_4way_1, partial = TRUE))
m_4way_2 <- aov(
Parameter_Bias ~ N + Mixing_proportion + T11 + Model + Lambda + N:Mixing_proportion:T11:Lambda,
data = final_mc_values
)
cat("\n5-Way ANOVA: N × Mixing_proportion × T11 × Lambda (Type II)\n")
print(Anova(m_4way_2, type = "II"))
print(eta_squared(m_4way_2, partial = TRUE))
m_4way_3 <- aov(
Parameter_Bias ~ N + Mixing_proportion + T11 + Model + Lambda + N:Mixing_proportion:Model:Lambda,
data = final_mc_values
)
cat("\n5-Way ANOVA: N × Mixing_proportion × Model × Lambda (Type II)\n")
print(Anova(m_4way_3, type = "II"))
print(eta_squared(m_4way_3, partial = TRUE))
m_4way_4 <- aov(
Parameter_Bias ~ N + Mixing_proportion + T11 + Model + Lambda + N:T11:Model:Lambda,
data = final_mc_values
)
cat("\n5-Way ANOVA: N × T11 × Model × Lambda (Type II)\n")
print(Anova(m_4way_4, type = "II"))
print(eta_squared(m_4way_4, partial = TRUE))
m_4way_5 <- aov(
Parameter_Bias ~ N + Mixing_proportion + T11 + Model + Lambda + Mixing_proportion:T11:Model:Lambda,
data = final_mc_values
)
cat("\n5-Way ANOVA: Mixing_proportion × T11 × Model × Lambda (Type II)\n")
print(Anova(m_4way_5, type = "II"))
print(eta_squared(m_4way_5, partial = TRUE))
# === PART 3: Three 4-WAY ANOVAs BY MODEL (THREE-WAY INTERACTIONS, TYPE II) ===
m_model1_3way <- aov(
Parameter_Bias ~ N + Mixing_proportion + T11 + Lambda + N:Mixing_proportion:T11,
data = filter(final_mc_values, Model == "Model 1")
)
cat("\n4-Way ANOVA: Model 1 (Historically Ideal) - N × Mixing_proportion × T11 (Type II)\n")
print(Anova(m_model1_3way, type = "II"))
print(eta_squared(m_model1_3way, partial = TRUE))
m_model2_3way <- aov(
Parameter_Bias ~ N + Mixing_proportion + T11 + Lambda + N:Mixing_proportion:T11,
data = filter(final_mc_values, Model == "Model 2")
)
cat("\n4-Way ANOVA: Model 2 (Realistic) - N × Mixing_proportion × T11 (Type II)\n")
print(Anova(m_model2_3way, type = "II"))
print(eta_squared(m_model2_3way, partial = TRUE))
m_model3_3way <- aov(
Parameter_Bias ~ N + Mixing_proportion + T11 + Lambda + N:Mixing_proportion:T11,
data = filter(final_mc_values, Model == "Model 3")
)
cat("\n4-Way ANOVA: Model 3 (Ordered) - N × Mixing_proportion × T11 (Type II)\n")
print(Anova(m_model3_3way, type = "II"))
print(eta_squared(m_model3_3way, partial = TRUE))
# === PART 4: 36 3-WAY ANOVAs FOR TWO-WAY INTERACTIONS BY MODEL AND EXCLUDED FACTOR (TYPE II) ===
# --- Model 1, Excluding Lambda ---
m_m1_ex_lambda_nm <- aov(
Parameter_Bias ~ N + Mixing_proportion + T11 + N:Mixing_proportion,
data = filter(final_mc_values, Model == "Model 1")
)
cat("\nModel 1: N × Mixing_proportion (Excluding Lambda) (Type II)\n")
print(Anova(m_m1_ex_lambda_nm, type = "II"))
print(eta_squared(m_m1_ex_lambda_nm, partial = TRUE))
m_m1_ex_lambda_nt <- aov(
Parameter_Bias ~ N + T11 + Mixing_proportion + N:T11,
data = filter(final_mc_values, Model == "Model 1")
)
cat("\nModel 1: N × T11 (Excluding Lambda) (Type II)\n")
print(Anova(m_m1_ex_lambda_nt, type = "II"))
print(eta_squared(m_m1_ex_lambda_nt, partial = TRUE))
m_m1_ex_lambda_mt <- aov(
Parameter_Bias ~ Mixing_proportion + T11 + N + Mixing_proportion:T11,
data = filter(final_mc_values, Model == "Model 1")
)
cat("\nModel 1: Mixing_proportion × T11 (Excluding Lambda) (Type II)\n")
print(Anova(m_m1_ex_lambda_mt, type = "II"))
print(eta_squared(m_m1_ex_lambda_mt, partial = TRUE))
# --- Model 2, Excluding Lambda ---
m_m2_ex_lambda_nm <- aov(
Parameter_Bias ~ N + Mixing_proportion + T11 + N:Mixing_proportion,
data = filter(final_mc_values, Model == "Model 1")
)
cat("\nModel 2: N × Mixing_proportion (Excluding Lambda) (Type II)\n")
print(Anova(m_m2_ex_lambda_nm, type = "II"))
print(eta_squared(m_m2_ex_lambda_nm, partial = TRUE))
m_m2_ex_lambda_nt <- aov(
Parameter_Bias ~ N + T11 + Mixing_proportion + N:T11,
data = filter(final_mc_values, Model == "Model 2")
)
cat("\nModel 2: N × T11 (Excluding Lambda) (Type II)\n")
print(Anova(m_m2_ex_lambda_nt, type = "II"))
print(eta_squared(m_m2_ex_lambda_nt, partial = TRUE))
m_m2_ex_lambda_mt <- aov(
Parameter_Bias ~ Mixing_proportion + T11 + N + Mixing_proportion:T11,
data = filter(final_mc_values, Model == "Model 2")
)
cat("\nModel 2: Mixing_proportion × T11 (Excluding Lambda) (Type II)\n")
print(Anova(m_m2_ex_lambda_mt, type = "II"))
print(eta_squared(m_m2_ex_lambda_mt, partial = TRUE))
# --- Model 3, Excluding Lambda ---
m_m3_ex_lambda_nm <- aov(
Parameter_Bias ~ N + Mixing_proportion + T11 + N:Mixing_proportion,
data = filter(final_mc_values, Model == "Model 3")
)
cat("\nModel 3: N × Mixing_proportion (Excluding Lambda) (Type II)\n")
print(Anova(m_m3_ex_lambda_nm, type = "II"))
print(eta_squared(m_m3_ex_lambda_nm, partial = TRUE))
m_m3_ex_lambda_nt <- aov(
Parameter_Bias ~ N + T11 + Mixing_proportion + N:T11,
data = filter(final_mc_values, Model == "Model 3")
)
cat("\nModel 3: N × T11 (Excluding Lambda) (Type II)\n")
print(Anova(m_m3_ex_lambda_nt, type = "II"))
print(eta_squared(m_m3_ex_lambda_nt, partial = TRUE))
m_m3_ex_lambda_mt <- aov(
Parameter_Bias ~ Mixing_proportion + T11 + N + Mixing_proportion:T11,
data = filter(final_mc_values, Model == "Model 3")
)
cat("\nModel 3: Mixing_proportion × T11 (Excluding Lambda) (Type II)\n")
print(Anova(m_m3_ex_lambda_mt, type = "II"))
print(eta_squared(m_m3_ex_lambda_mt, partial = TRUE))
# --- Model 1, Excluding T11 ---
m_m1_ex_t11_nm <- aov(
Parameter_Bias ~ N + Mixing_proportion + Lambda + N:Mixing_proportion,
data = filter(final_mc_values, Model == "Model 1")
)
cat("\nModel 1: N × Mixing_proportion (Excluding T11) (Type II)\n")
print(Anova(m_m1_ex_t11_nm, type = "II"))
print(eta_squared(m_m1_ex_t11_nm, partial = TRUE))
m_m1_ex_t11_nl <- aov(
Parameter_Bias ~ N + Lambda + Mixing_proportion + N:Lambda,
data = filter(final_mc_values, Model == "Model 1")
)
cat("\nModel 1: N × Lambda (Excluding T11) (Type II)\n")
print(Anova(m_m1_ex_t11_nl, type = "II"))
print(eta_squared(m_m1_ex_t11_nl, partial = TRUE))
m_m1_ex_t11_ml <- aov(
Parameter_Bias ~ Mixing_proportion + Lambda + N + Mixing_proportion:Lambda,
data = filter(final_mc_values, Model == "Model 1")
)
cat("\nModel 1: Mixing_proportion × Lambda (Excluding T11) (Type II)\n")
print(Anova(m_m1_ex_t11_ml, type = "II"))
print(eta_squared(m_m1_ex_t11_ml, partial = TRUE))
# --- Model 2, Excluding T11 ---
m_m2_ex_t11_nm <- aov(
Parameter_Bias ~ N + Mixing_proportion + Lambda + N:Mixing_proportion,
data = filter(final_mc_values, Model == "Model 2")
)
cat("\nModel 2: N × Mixing_proportion (Excluding T11) (Type II)\n")
print(Anova(m_m2_ex_t11_nm, type = "II"))
print(eta_squared(m_m2_ex_t11_nm, partial = TRUE))
m_m2_ex_t11_nl <- aov(
Parameter_Bias ~ N + Lambda + Mixing_proportion + N:Lambda,
data = filter(final_mc_values, Model == "Model 2")
)
cat("\nModel 2: N × Lambda (Excluding T11) (Type II)\n")
print(Anova(m_m2_ex_t11_nl, type = "II"))
print(eta_squared(m_m2_ex_t11_nl, partial = TRUE))
m_m2_ex_t11_ml <- aov(
Parameter_Bias ~ Mixing_proportion + Lambda + N + Mixing_proportion:Lambda,
data = filter(final_mc_values, Model == "Model 2")
)
cat("\nModel 2: Mixing_proportion × Lambda (Excluding T11) (Type II)\n")
print(Anova(m_m2_ex_t11_ml, type = "II"))
print(eta_squared(m_m2_ex_t11_ml, partial = TRUE))
# --- Model 3, Excluding T11 ---
m_m3_ex_t11_nm <- aov(
Parameter_Bias ~ N + Mixing_proportion + Lambda + N:Mixing_proportion,
data = filter(final_mc_values, Model == "Model 3")
)
cat("\nModel 3: N × Mixing_proportion (Excluding T11) (Type II)\n")
print(Anova(m_m3_ex_t11_nm, type = "II"))
print(eta_squared(m_m3_ex_t11_nm, partial = TRUE))
m_m3_ex_t11_nl <- aov(
Parameter_Bias ~ N + Lambda + Mixing_proportion + N:Lambda,
data = filter(final_mc_values, Model == "Model 3")
)
cat("\nModel 3: N × Lambda (Excluding T11) (Type II)\n")
print(Anova(m_m3_ex_t11_nl, type = "II"))
print(eta_squared(m_m3_ex_t11_nl, partial = TRUE))
m_m3_ex_t11_ml <- aov(
Parameter_Bias ~ Mixing_proportion + Lambda + N + Mixing_proportion:Lambda,
data = filter(final_mc_values, Model == "Model 3")
)
cat("\nModel 3: Mixing_proportion × Lambda (Excluding T11) (Type II)\n")
print(Anova(m_m3_ex_t11_ml, type = "II"))
print(eta_squared(m_m3_ex_t11_ml, partial = TRUE))
# --- Model 1, Excluding N ---
m_m1_ex_n_mt <- aov(
Parameter_Bias ~ Mixing_proportion + T11 + Lambda + Mixing_proportion:T11,
data = filter(final_mc_values, Model == "Model 1")
)
cat("\nModel 1: Mixing_proportion × T11 (Excluding N) (Type II)\n")
print(Anova(m_m1_ex_n_mt, type = "II"))
print(eta_squared(m_m1_ex_n_mt, partial = TRUE))
m_m1_ex_n_tl <- aov(
Parameter_Bias ~ T11 + Lambda + Mixing_proportion + T11:Lambda,
data = filter(final_mc_values, Model == "Model 1")
)
cat("\nModel 1: T11 × Lambda (Excluding N) (Type II)\n")
print(Anova(m_m1_ex_n_tl, type = "II"))
print(eta_squared(m_m1_ex_n_tl, partial = TRUE))
m_m1_ex_n_ml <- aov(
Parameter_Bias ~ Mixing_proportion + Lambda + T11 + Mixing_proportion:Lambda,
data = filter(final_mc_values, Model == "Model 1")
)
cat("\nModel 1: Mixing_proportion × Lambda (Excluding N) (Type II)\n")
print(Anova(m_m1_ex_n_ml, type = "II"))
print(eta_squared(m_m1_ex_n_ml, partial = TRUE))
# --- Model 2, Excluding N ---
m_m2_ex_n_mt <- aov(
Parameter_Bias ~ Mixing_proportion + T11 + Lambda + Mixing_proportion:T11,
data = filter(final_mc_values, Model == "Model 2")
)
cat("\nModel 2: Mixing_proportion × T11 (Excluding N) (Type II)\n")
print(Anova(m_m2_ex_n_mt, type = "II"))
print(eta_squared(m_m2_ex_n_mt, partial = TRUE))
m_m2_ex_n_tl <- aov(
Parameter_Bias ~ T11 + Lambda + Mixing_proportion + T11:Lambda,
data = filter(final_mc_values, Model == "Model 2")
)
cat("\nModel 2: T11 × Lambda (Excluding N) (Type II)\n")
print(Anova(m_m2_ex_n_tl, type = "II"))
print(eta_squared(m_m2_ex_n_tl, partial = TRUE))
m_m2_ex_n_ml <- aov(
Parameter_Bias ~ Mixing_proportion + Lambda + T11 + Mixing_proportion:Lambda,
data = filter(final_mc_values, Model == "Model 2")
)
cat("\nModel 2: Mixing_proportion × Lambda (Excluding N) (Type II)\n")
print(Anova(m_m2_ex_n_ml, type = "II"))
print(eta_squared(m_m2_ex_n_ml, partial = TRUE))
# --- Model 3, Excluding N ---
m_m3_ex_n_mt <- aov(
Parameter_Bias ~ Mixing_proportion + T11 + Lambda + Mixing_proportion:T11,
data = filter(final_mc_values, Model == "Model 3")
)
cat("\nModel 3: Mixing_proportion × T11 (Excluding N) (Type II)\n")
print(Anova(m_m3_ex_n_mt, type = "II"))
print(eta_squared(m_m3_ex_n_mt, partial = TRUE))
m_m3_ex_n_tl <- aov(
Parameter_Bias ~ T11 + Lambda + Mixing_proportion + T11:Lambda,
data = filter(final_mc_values, Model == "Model 3")
)
cat("\nModel 3: T11 × Lambda (Excluding N) (Type II)\n")
print(Anova(m_m3_ex_n_tl, type = "II"))
print(eta_squared(m_m3_ex_n_tl, partial = TRUE))
m_m3_ex_n_ml <- aov(
Parameter_Bias ~ Mixing_proportion + Lambda + T11 + Mixing_proportion:Lambda,
data = filter(final_mc_values, Model == "Model 3")
)
cat("\nModel 3: Mixing_proportion × Lambda (Excluding N) (Type II)\n")
print(Anova(m_m3_ex_n_ml, type = "II"))
print(eta_squared(m_m3_ex_n_ml, partial = TRUE))
# --- Model 1, Excluding Class Prevalence ---
m_m1_ex_mp_nt <- aov(
Parameter_Bias ~ N + T11 + Lambda + N:T11,
data = filter(final_mc_values, Model == "Model 1")
)
cat("\nModel 1: N × T11 (Excluding Class Prevalence) (Type II)\n")
print(Anova(m_m1_ex_mp_nt, type = "II"))
print(eta_squared(m_m1_ex_mp_nt, partial = TRUE))
m_m1_ex_mp_nl <- aov(
Parameter_Bias ~ N + Lambda + T11 + N:Lambda,
data = filter(final_mc_values, Model == "Model 1")
)
cat("\nModel 1: N × Lambda (Excluding Class Prevalence) (Type II)\n")
print(Anova(m_m1_ex_mp_nl, type = "II"))
print(eta_squared(m_m1_ex_mp_nl, partial = TRUE))
m_m1_ex_mp_tl <- aov(
Parameter_Bias ~ T11 + Lambda + N + T11:Lambda,
data = filter(final_mc_values, Model == "Model 1")
)
cat("\nModel 1: T11 × Lambda (Excluding Class Prevalence) (Type II)\n")
print(Anova(m_m1_ex_mp_tl, type = "II"))
print(eta_squared(m_m1_ex_mp_tl, partial = TRUE))
# --- Model 2, Excluding Class Prevalence ---
m_m2_ex_mp_nt <- aov(
Parameter_Bias ~ N + T11 + Lambda + N:T11,
data = filter(final_mc_values, Model == "Model 2")
)
cat("\nModel 2: N × T11 (Excluding Class Prevalence) (Type II)\n")
print(Anova(m_m2_ex_mp_nt, type = "II"))
print(eta_squared(m_m2_ex_mp_nt, partial = TRUE))
m_m2_ex_mp_nl <- aov(
Parameter_Bias ~ N + Lambda + T11 + N:Lambda,
data = filter(final_mc_values, Model == "Model 2")
)
cat("\nModel 2: N × Lambda (Excluding Class Prevalence) (Type II)\n")
print(Anova(m_m2_ex_mp_nl, type = "II"))
print(eta_squared(m_m2_ex_mp_nl, partial = TRUE))
m_m2_ex_mp_tl <- aov(
Parameter_Bias ~ T11 + Lambda + N + T11:Lambda,
data = filter(final_mc_values, Model == "Model 2")
)
cat("\nModel 2: T11 × Lambda (Excluding Class Prevalence) (Type II)\n")
print(Anova(m_m2_ex_mp_tl, type = "II"))
print(eta_squared(m_m2_ex_mp_tl, partial = TRUE))
# --- Model 3, Excluding Class Prevalence ---
m_m3_ex_mp_nt <- aov(
Parameter_Bias ~ N + T11 + Lambda + N:T11,
data = filter(final_mc_values, Model == "Model 3")
)
cat("\nModel 3: N × T11 (Excluding Class Prevalence) (Type II)\n")
print(Anova(m_m3_ex_mp_nt, type = "II"))
print(eta_squared(m_m3_ex_mp_nt, partial = TRUE))
m_m3_ex_mp_nl <- aov(
Parameter_Bias ~ N + Lambda + T11 + N:Lambda,
data = filter(final_mc_values, Model == "Model 3")
)
cat("\nModel 3: N × Lambda (Excluding Class Prevalence) (Type II)\n")
print(Anova(m_m3_ex_mp_nl, type = "II"))
print(eta_squared(m_m3_ex_mp_nl, partial = TRUE))
m_m3_ex_mp_tl <- aov(
Parameter_Bias ~ T11 + Lambda + N + T11:Lambda,
data = filter(final_mc_values, Model == "Model 3")
)
cat("\nModel 3: T11 × Lambda (Excluding Class Prevalence) (Type II)\n")
print(Anova(m_m3_ex_mp_tl, type = "II"))
print(eta_squared(m_m3_ex_mp_tl, partial = TRUE))
#| label: "subset-data-for-bias-plots"
#| echo: true
#| message: false
#| warning: false
#| code-fold: true
library(dplyr)
final_mc_values <- read.csv(
here::here("Simulations", "STUDY_2", "zbootstrapping", "r_l_3c_mc_final_mc_values.csv"),
stringsAsFactors = FALSE
) %>%
mutate(
# Clean columns
Model = trimws(Model),
Mixing_proportion = trimws(Mixing_proportion),
Population_Numeric = as.numeric(Population),
Population = case_when(
Population == "0.2" | Population == 0.2 ~ ".200",
Population == "0.8" | Population == 0.8 ~ ".800",
TRUE ~ as.character(Population)
),
# Factor and label setup
Mixing_proportion = factor(
Mixing_proportion,
levels = c(".10, .30, .60", ".33, .33, .33", ".60, .30, .10")
),
Model = factor(Model, levels = c("Model 1", "Model 2", "Model 3")),
N = factor(
N,
levels = c("N = 500", "N = 1000", "N = 2500", "N = 5000"),
labels = c("\U1D441 = 500", "\U1D441 = 1000", "\U1D441 = 2500", "\U1D441 = 5000") # Unicode italic N
),
Lambda = factor(Lambda, levels = c("0.3", "0.5", "0.7", "0.9", "A", "B", "C", "D"), ordered = TRUE),
Population_Label = factor(
Population_Numeric,
levels = c(0.2, 0.8),
labels = c(
'bold(italic(T))[11] == ".200"',
'bold(italic(T))[11] == ".800"'
)
)
) %>%
mutate(
Power_Dic = ifelse(Power >= 0.8, 1, 0),
Coverage_Dic = ifelse(Coverage > 0.98 | Coverage < 0.91, 0, 1)
) %>%
ungroup()
# Step 1: Calculate dichotomous variable for Power (1 if Power >= 0.8, else 0)
final_mc_values <- final_mc_values %>%
mutate(Power_Dic = ifelse(Power >= 0.8, 1, 0))
# Step 2: Calculate dichotomous variable for Coverage (0 if outside [0.91, 0.98], else 1)
final_mc_values <- final_mc_values %>%
mutate(Coverage_Dic = ifelse(Coverage > 0.98 | Coverage < 0.91, 0, 1))
# Step 3: Remove any groupings before further calculations
final_mc_values <- final_mc_values %>%
ungroup()
# Subset data for Model × T11 combinations
subset_m1_t02 <- final_mc_values %>% filter(Model == "Model 1", Population == ".200") %>% droplevels()
subset_m1_t08 <- final_mc_values %>% filter(Model == "Model 1", Population == ".800") %>% droplevels()
subset_m2_t02 <- final_mc_values %>% filter(Model == "Model 2", Population == ".200") %>% droplevels()
subset_m2_t08 <- final_mc_values %>% filter(Model == "Model 2", Population == ".800") %>% droplevels()
subset_m3_t02 <- final_mc_values %>% filter(Model == "Model 3", Population == ".200") %>% droplevels()
subset_m3_t08 <- final_mc_values %>% filter(Model == "Model 3", Population == ".800") %>% droplevels()
View(subset_m1_t02)
View(subset_m1_t08)
View(subset_m2_t02)
View(subset_m2_t08)
View(subset_m3_t02)
View(subset_m3_t08)
# READ CSV
violation_summary <- read.csv(here("Simulations", "STUDY_2", 'zdata', "violation_summary_l_r_3c.csv"))
# 🔧 Fix Population labels (convert numeric to proper character labels)
violation_summary <- violation_summary %>%
mutate(Population = case_when(
Population == 0.2 ~ ".200",
Population == 0.8 ~ ".800",
TRUE ~ as.character(Population)
))
# RUNNING Slot 1 (N = 500, TP = 3.179, Mix = 1)
#violation_summary <- subset(violation_summary, N_numeric == 1000 & TPs == 3.179 & Mix == 1)
# RUNNING Slot 2 (N = 500, TP = 3.179, Mix = 2)
#violation_summary <- subset(violation_summary, N_numeric == 1000 & TPs == 3.179 & Mix == 2)
# RUNNING Slot 3 (N = 500, TP = 3.179, Mix = 3)
#violation_summary <- subset(violation_summary, N_numeric == 1000 & TPs == 3.179 & Mix == 3)
# running Slot 4 (N = 500, TP = 0.407, Mix = 1)
#violation_summary <- subset(violation_summary, N_numeric == 1000 & TPs == 0.407 & Mix == 1)
# RUNNING Slot 5 (N = 500, TP = 0.407, Mix = 2)
#violation_summary <- subset(violation_summary, N_numeric == 1000 & TPs == 0.407 & Mix == 2)
# RUNNING Slot 6 (N = 500, TP = 0.407, Mix = 3)
#violation_summary <- subset(violation_summary, N_numeric == 1000 & TPs == 0.407 & Mix == 3)
# RUNNING Slot 1 (N = 1000, TP = 3.179, Mix = 1)
#violation_summary <- subset(violation_summary, N_numeric == 1000 & TPs == 3.179 & Mix == 1)
# RUNNING Slot 2 (N = 1000, TP = 3.179, Mix = 2)
#violation_summary <- subset(violation_summary, N_numeric == 1000 & TPs == 3.179 & Mix == 2)
# RUNNING Slot 3 (N = 1000, TP = 3.179, Mix = 3)
#violation_summary <- subset(violation_summary, N_numeric == 1000 & TPs == 3.179 & Mix == 3)
# running Slot 4 (N = 1000, TP = 0.407, Mix = 1)
#violation_summary <- subset(violation_summary, N_numeric == 1000 & TPs == 0.407 & Mix == 1)
# RUNNING Slot 5 (N = 1000, TP = 0.407, Mix = 2)
#violation_summary <- subset(violation_summary, N_numeric == 1000 & TPs == 0.407 & Mix == 2)
# RUNNING Slot 6 (N = 1000, TP = 0.407, Mix = 3)
#violation_summary <- subset(violation_summary, N_numeric == 1000 & TPs == 0.407 & Mix == 3)
# running Slot 7 (N = 2500, TP = 3.179, Mix = 1)
#violation_summary <- subset(violation_summary, N_numeric == 2500 & TPs == 3.179 & Mix == 1)
# RUNNING Slot 8 (N = 2500, TP = 3.179, Mix = 2)
#violation_summary <- subset(violation_summary, N_numeric == 2500 & TPs == 3.179 & Mix == 2)
# RUNNING Slot 9 (N = 2500, TP = 3.179, Mix = 3)
#violation_summary <- subset(violation_summary, N_numeric == 2500 & TPs == 3.179 & Mix == 3)
# RUNNING Slot 10 (N = 2500, TP = 0.407, Mix = 1)
#violation_summary <- subset(violation_summary, N_numeric == 2500 & TPs == 0.407 & Mix == 1)
# RUNNING Slot 11 (N = 2500, TP = 0.407, Mix = 2)
#violation_summary <- subset(violation_summary, N_numeric == 2500 & TPs == 0.407 & Mix == 2)
# RUNNING Slot 12 (N = 2500, TP = 0.407, Mix = 3)
#violation_summary <- subset(violation_summary, N_numeric == 2500 & TPs == 0.407 & Mix == 3)
# RUNNING Slot 13 (N = 5000, TP = 3.179, Mix = 1)
#violation_summary <- subset(violation_summary, N_numeric == 5000 & TPs == 3.179 & Mix == 1)
# RUNNING Slot 14 (N = 5000, TP = 3.179, Mix = 2)
#violation_summary <- subset(violation_summary, N_numeric == 5000 & TPs == 3.179 & Mix == 2)
# RUNNING Slot 15 (N = 5000, TP = 3.179, Mix = 3)
#violation_summary <- subset(violation_summary, N_numeric == 5000 & TPs == 3.179 & Mix == 3)
# RUNNING Slot 16 (N = 5000, TP = 0.407, Mix = 1)
#violation_summary <- subset(violation_summary, N_numeric == 5000 & TPs == 0.407 & Mix == 1)
# RUNNING Slot 17 (N = 5000, TP = 0.407, Mix = 2)
violation_summary <- subset(violation_summary, N_numeric == 5000 & TPs == 0.407 & Mix == 2)
#RUNNING NO LAPTOP Slot 18 (N = 5000, TP = 0.407, Mix = 3)
#violation_summary <- subset(violation_summary, N_numeric == 5000 & TPs == 0.407 & Mix == 3)
model1_data <- subset(violation_summary, Model == "Model 1")
model2_data <- subset(violation_summary, Model == "Model 2")
model3_data <- subset(violation_summary, Model == "Model 3")
View(violation_summary)
# READ CSV
violation_summary <- read.csv(here("Simulations", "STUDY_2", 'zdata', "violation_summary_l_r_3c.csv"))
# 🔧 Fix Population labels (convert numeric to proper character labels)
violation_summary <- violation_summary %>%
mutate(Population = case_when(
Population == 0.2 ~ ".200",
Population == 0.8 ~ ".800",
TRUE ~ as.character(Population)
))
View(violation_summary)
